;; Analyzed by ClojureScript 1.7.228
{:name figwheel-project.test, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {inc2 {:protocol-inline nil, :meta {:file "/home/arno/code/clojurescript/figwheel-project/src/figwheel_project/test.cljs", :line 2, :column 7, :end-line 2, :end-column 11, :arglists (quote ([x] [x y])), :doc "Returns a number one greater than number passed in.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}}, :name figwheel-project.test/inc2, :variadic false, :file "src/figwheel_project/test.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}, :method-params ([x] [x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2, :end-line 2, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x y]), :doc "Returns a number one greater than number passed in."}, sum {:protocol-inline nil, :meta {:file "/home/arno/code/clojurescript/figwheel-project/src/figwheel_project/test.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([& args])), :doc "Given any number of numbers, sum them together.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name figwheel-project.test/sum, :variadic true, :file "src/figwheel_project/test.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "Given any number of numbers, sum them together."}}}